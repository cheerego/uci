#  curl -L "https://github.com/docker/compose/releases/download/v2.2.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
version: '2.2'

services:
  redis:
    #    https://hub.docker.com/_/redis
    image: redis:5.0.14
    volumes:
      - redis-data:/data
    expose:
      - 6379
    ports:
      - "6379:6379"
    environment:
      - TZ=Asia/Shanghai
  rabbitmq:
    image: rabbitmq:3.9
    expose:
      - "5672"
    ports:
      - "5672:5672"
      - "15672:15672"
    #    volumes:
    #      - ./infra/rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins
    #      - ./infra/rabbitmq/auth.conf:/etc/rabbitmq/conf.d/auth.conf
    environment:
      - TZ=Asia/Shanghai
  nginx:
    image: nginx:1.25.2
    expose:
      - "80"
    ports:
      - "80:80"
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - "./infra/nginx/nginx.conf:/etc/nginx/nginx.conf"
      - "./infra/nginx/proxy.conf:/etc/nginx/proxy.conf"
      - "./infra/nginx/conf.d:/etc/nginx/conf.d"
    restart: always
  mysql:
#    image: bitnami/mysql:8.0.32
    image: mysql:8.0.32
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - TZ=Asia/Shanghai
      - MYSQL_ROOT_PASSWORD=uci123
    expose:
      - "3306"
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/bitnami/mysql/data
      - "./infra/mysql:/docker-entrypoint-initdb.d"
volumes:
  redis-data: {}
  mysql-data: {}
